<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->

	<!-- DB를 가리킴 MySQL... -->
	<!-- 동적으로 객체생성함 ... 클래스메소드로 객체생성 ... 하는 방식 -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<!-- <property name="driverClassName" value="com.mysql.jdbc.Driver"></property> -->
		<property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"></property>
		<!-- <property name="url" -->
		<!-- value="jdbc:mysql://127.0.0.1:3306/book_ex?useSSL=false"></property> -->
		<property name="url"
			value="jdbc:log4jdbc:mysql://127.0.0.1:3306/book_ex?useSSL=false"></property>
		<property name="username" value="root"></property>
		<property name="password" value="0000"></property>
	</bean>

	<!-- Session은 JDBC의 Connection -->
	<!-- Session Factory 설정 -->
	<!-- Session Factory가 Session을 관리해준다. 미리 Session을 만들어준다거나, 유휴Session 보유?? -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:/mybatis-config.xml">
		</property>
		<!-- added -->
		<property name="mapperLocations" value="classpath:mappers/**/*Mapper.xml">
		</property>
	</bean>

	<!-- Session은 JDBC의 Connection -->
	<!-- Session 설정 -->
	<!-- SqlSession sqlSession = new sqlsessionTemplate(sqlSessionFactory) -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate"
		destroy-method="clearCache">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
	</bean>

	<!-- 해당위치를 뒤져서 @Inject에 (sqlSession에) 객체 주입 // DI -->
	<context:component-scan base-package="org.zerock.persistence" />
</beans>
